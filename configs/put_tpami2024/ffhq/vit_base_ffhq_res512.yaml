model:
  target: image_synthesis.modeling.models.masked_image_inpainting_transformer.MaskedImageInpaintingTransformer
  params:
    content_seq_len: 1024
    n_layer: 12 # number of transformer blocks
    dim: 768 # embedding dim
    num_heads: 12
    learn_mask_emb: True
    num_token: 8192
    act_layer: GELU2
    input_feature_type: origin

    attn_content_with_mask: False
    
    drop_path: 0.1 # follow PeCo
    random_quantize: 0.3
    weight_decay: 0.05

    loss_config:
      target: image_synthesis.modeling.modules.losses.poly_loss.PolyLoss
      params:
        epsilons: [1]
    
    content_codec_config:
      target: image_synthesis.modeling.codecs.image_codec.patch_vqgan.PatchVQGAN
      params:
        ckpt_path: OUTPUT/tpami2024_p_vqvae_ffhq_res512/checkpoint/last.pth
        combine_rec_and_gt: True
        trainable: False
        token_shape: [32, 32]
        quantizer_config:
          target: image_synthesis.modeling.codecs.image_codec.patch_vqgan.VectorQuantizer
          params:
            n_e: 9216
            e_dim: 256
            masked_embed_start: 8192
            embed_ema: True
            get_embed_type: retrive      
            distance_type: euclidean    
        encoder_config: 
          target: image_synthesis.modeling.codecs.image_codec.patch_vqgan.PatchEncoder2
          params:
            in_ch: 3
            res_ch: 256
            out_ch: 256
            num_res_block: 10
            stride: 16
        decoder_config:
          target: image_synthesis.modeling.codecs.image_codec.patch_vqgan.PatchConvDecoder2
          params:
            in_ch: 256
            out_ch: 3
            res_ch: 256
            num_res_block: 2
            num_res_block_after_resolution_change: 2
            stride: 16
            up_layer_with_image: True
            upsample_type: nearest

solver:
  find_unused_parameters: False
  base_lr: 0.0
  adjust_lr: none # not adjust lr according to total batch_size
  max_epochs: 800
  save_epochs: 30
  validation_epochs: 10
  sample_iterations: 25540 # about 20 epochs # how many iterations to perform sampling once ?
  optimizers_and_schedulers: # a list of configures, so we can config several optimizers and schedulers
  - name: transformer # default is None
    optimizer:
      target: torch.optim.AdamW
      params: 
        betas: !!python/tuple [0.9, 0.999] # follow PeCo
    scheduler:
      step_iteration: 1
      target: image_synthesis.engine.lr_scheduler.CosineAnnealingLRWithWarmup
      params:
        min_lr: 1.0e-5
        warmup_lr: 1.5e-3 # 5.0e-4 for BEiT, 1.5e-3 for PeCo # the lr to be touched after warmup
        warmup: 25540 # about 20 epochs


dataloader:
  data_root: data
  batch_size: 6 # one sample takes about 2.2G , bs=1 takes about 5.8G
  num_workers: 2
  train_datasets:
    - target: image_synthesis.data.image_list_dataset.ImageListDataset
      params:
        name: ffhq
        image_list_file: data/ffhqtrain_69k.txt
        provided_mask_name: irregular-mask/testing_mask_dataset
        use_provided_mask_ratio: ['0.2', '0.6']
        use_provided_mask: 0.4
        mask: 1.0
        mask_low_to_high: 0.2
        mask_low_size: [32, 32]
        multi_image_mask: False 
        return_data_keys: [image, mask]
        stroken_mask_params:
          maxVertex: 15
          minVertex: 10
          maxLength: 300
          maxBrushWidth: 120
          minBrushWidth: 30
          keep_ratio: [0.3, 0.6]
          min_area: 256 # 16*16 we set the receptive field as the min masked area
          minRectangle: 0
          maxRectangle: 3
        im_preprocessor_config:
          target: image_synthesis.data.utils.image_preprocessor.SimplePreprocessor
          params:
            size: [512, 512]
            smallest_max_size: 512
            random_crop: True
            horizon_flip: True
            
  validation_datasets:
    - target: image_synthesis.data.image_list_dataset.ImageListDataset
      params:
        name: ffhq
        image_list_file: data/ffhqvalidation_1k.txt
        provided_mask_name: irregular-mask/testing_mask_dataset
        use_provided_mask_ratio: ['0.2', '0.6']
        use_provided_mask: 0.4
        mask: 1.0
        mask_low_to_high: 0.0
        mask_low_size: [32, 32]
        multi_image_mask: False 
        return_data_keys: [image, mask]
        stroken_mask_params:
          maxVertex: 15
          minVertex: 10
          maxLength: 300
          maxBrushWidth: 120
          minBrushWidth: 30
          keep_ratio: [0.3, 0.6]
          min_area: 256 # 16*16 we set the receptive field as the min masked area
          minRectangle: 0
          maxRectangle: 3
        
        im_preprocessor_config:
          target: image_synthesis.data.utils.image_preprocessor.SimplePreprocessor
          params:
            size: [512, 512]
            smallest_max_size: 512